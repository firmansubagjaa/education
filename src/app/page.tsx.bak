"use client";
import { useDataList } from "@/hooks/useDataList";
import Image from "next/image";
import { useState } from "react";

export default function Home() {
  const { data, isSuccess, isPending, error } = useDataList();

  const [isOpen, setIsOpen] = useState<boolean>(false);

  const toggleSidebar = () => {
    setIsOpen(!isOpen);
  };

  const handleDownload = (url: string, title: string, type: string): void => {
    // Buat fungsi untuk mengunduh gambar atau video
    const link = document.createElement("a");
    link.href = url;
    link.download = `${title}.${type === "video" ? "mp4" : "jpg"}`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  if (isPending) {
    return <div>Loading</div>;
  }

  if (error) {
    return <div>Error</div>;
  }

  return (
    <div className="flex h-screen tracking-tight">
      {/* Sidebar */}
      <div
        className={`fixed top-0 left-0 h-full w-64 z-[1] bg-gray-800 text-white transition-all duration-300 ease-in-out ${
          isOpen ? "translate-x-0" : "-translate-x-full"
        }`}
      >
        <div className="p-4 mt-10 flex items-center justify-between">
          <div>
            <Image
              src={data[0].logo}
              alt="Logo"
              className="w-32"
              width={400}
              height={400}
            />
          </div>
          <button onClick={toggleSidebar} className="p-3 flex flex-col gap-1">
            <div className="bg-white h-[0.1rem] w-5 translate-y-[0.25rem] rotate-45" />

            <div className="bg-white h-[0.1rem] w-5 -translate-y-[0.10rem] -rotate-45" />
          </button>
        </div>
        <nav className="mt-4">
          <ul>
            <li className="py-2 px-4 hover:bg-gray-700">{data[0].title}</li>
          </ul>
        </nav>
      </div>

      {/* Header */}
      <div className="flex-1">
        <header
          style={{
            backgroundImage: `url(${data[0].banner})`,
            backgroundRepeat: "no-repeat",
            backgroundSize: "100",
            backgroundAttachment: "fixed",
            backgroundPosition: "bottom",
          }}
          className="bg-gray-200 gap-3 shadow-md text-white h-96 object-cover object-top rounded-b-3xl"
        >
          <div className="backdrop-blur-sm bg-black/50 h-full w-full p-4 flex flex-col items-start justify-between rounded-b-3xl">
            <div className="flex">
              <button onClick={toggleSidebar} className="focus:outline-none">
                <div className="p-3 flex flex-col gap-1">
                  <div className="bg-white h-[0.1rem] w-4" />
                  <div className="bg-white h-[0.1rem] w-4" />
                  <div className="bg-white h-[0.1rem] w-4" />
                </div>
              </button>
              <h1 className="text-2xl font-bold">Education</h1>
            </div>
            <div className="py-20 flex flex-col text-right w-full">
              <h2 className="text-4xl font-bold">{data[0].title}</h2>
              <p>{data[0].description}</p>
            </div>
          </div>
        </header>

        {/* Main Content */}
        <main className="container mx-auto p-4 mt-24">
          {/* Banner */}
          {/* <Image
            src={data[0].banner}
            alt="Banner"
            className="w-full mb-4"
            width={500}
            height={500}
          /> */}

          {/* Logo */}

          {/* Playlist */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            {data[0].playlist.map((item: Playlist) => (
              <div
                key={item.id}
                className="bg-white p-4 rounded-lg shadow flex flex-col justify-between"
              >
                <div>
                  <div className="w-full h-20">
                    <h2 className="text-lg font-semibold">{item.title}</h2>
                    <p>{item.description}</p>
                  </div>
                  {item.type === "image" ? (
                    <>
                      <Image
                        src={item.url}
                        alt={item.title}
                        className="mt-2 aspect-video w-full rounded-md"
                        width={200}
                        height={200}
                      />
                    </>
                  ) : item.type === "video" ? (
                    <div className="aspect-video mt-2">
                      <iframe
                        src={item.url}
                        title={item.title}
                        className="w-full h-full rounded-md"
                        allowFullScreen
                      ></iframe>
                    </div>
                  ) : null}
                </div>

                <div>
                  <button
                    onClick={() =>
                      handleDownload(item.url, item.title, item.type)
                    }
                    className="block mt-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none w-full"
                  >
                    Download
                  </button>
                </div>
              </div>
            ))}
          </div>
        </main>

        {/* Footer */}
        <footer className="bg-gray-800 text-white py-4 mt-4">
          <div className="container">
            <div className="flex flex-col justify-center items-center gap-2">
              <div>
                <Image
                  src={data[0].logo}
                  alt="Logo"
                  className="w-64"
                  width={400}
                  height={400}
                />
              </div>
              <span className="text-sm">
                @Copyright {new Date().getFullYear()}
              </span>
            </div>
          </div>
        </footer>
      </div>
    </div>
  );
}
